import 'dart:async';
import 'package:flutter/material.dart';


// Rest of your code remains unchanged

void main() {
  runApp(MaterialApp(
      home: QuizApp()
  ));
}

class QuizApp extends StatefulWidget {
  @override
  _QuizAppState createState() => _QuizAppState();
}

class _QuizAppState extends State<QuizApp> {
  List<Map<String, dynamic>> questions = [
    {
      'question': "What percentage of the Earth's surface is covered by water?",
      'options': ["50%", "70%", "90%", "97%"],
      'answer': "70%",
    },
    {
      'question': "What is the chemical formula for water?",
      'options': ["H2O2", "CO2", "H2SO4", "H2O"],
      'answer': "H2O",
    },
    {
      'question': "Which is the world's largest river by discharge?",
      'options': ["Amazon River", "Nile River", "Mississippi River", "Yangtze River"],
      'answer': "Amazon River",
    },
    {
      'question': "What is the process of turning saltwater into freshwater called?",
      'options': ["Desalination", "Condensation", "Filtration", "Distillation"],
      'answer': "Desalination",
    },
    {
      'question': "Which of the following is a greenhouse gas found in the atmosphere?",
      'options': ["Oxygen", "Methane", "Nitrogen", "Hydrogen"],
      'answer': "Methane",
    },
    {
      'question': "What is the main source of drinking water for most people worldwide?",
      'options': ["Groundwater", "Lakes", "Rivers", "Ponds"],
      'answer': "Groundwater",
    },
    {
      'question': "Which ocean is the largest by surface area?",
      'options': ["Atlantic Ocean", "Indian Ocean", "Arctic Ocean", "Pacific Ocean"],
      'answer': "Pacific Ocean",
    },
    {
      'question': "What is the term for the gradual increase in Earth's average temperature due to human activities?",
      'options': ["Global Cooling", "Greenhouse Effect", "Global Warming", "Ozone Depletion"],
      'answer': "Global Warming",
    },
  ];

  int score = 0;
  int currentQuestion = 0;
  int timerSeconds = 20;
  Timer? timer;

  void checkAnswer(String selectedOption) {
    String correctOption = questions[currentQuestion]['answer'];
    if (selectedOption == correctOption) {
      setState(() {
        score++;
      });
    }
    moveToNextQuestion();
  }

  void moveToNextQuestion() {
    if (currentQuestion < questions.length - 1) {
      setState(() {
        currentQuestion++;
        timerSeconds = 20;
      });
      startTimer();
    }
  }

  void startTimer() {
    timer = Timer.periodic(Duration(seconds: 1), (timer) {
      setState(() {
        if (timerSeconds > 0) {
          timerSeconds--;
        } else {
          timer.cancel();
          moveToNextQuestion();
        }
      });
    });
  }

  @override
  void initState() {
    super.initState();
    startTimer();
  }

  @override
  void dispose() {
    timer?.cancel();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    if (currentQuestion < questions.length) {
      return Scaffold(
        appBar: AppBar(
          title: Text('Quiz App'),
        ),
        body: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              Text(
                questions[currentQuestion]['question'],
                style: TextStyle(fontSize: 20),
              ),
              SizedBox(height: 20),
              ...List<Widget>.generate(
                questions[currentQuestion]['options'].length,
                    (index) => ElevatedButton(
                  onPressed: () {
                    checkAnswer(questions[currentQuestion]['options'][index]);
                  },
                  child: Text(questions[currentQuestion]['options'][index]),
                ),
              ),
              SizedBox(height: 20),
              Text(
                'Score: $score',
                style: TextStyle(fontSize: 16),
              ),
              Text(
                'Time left: $timerSeconds seconds',
                style: TextStyle(fontSize: 16),
              ),
            ],
          ),
        ),
      );
    } else {
      return Scaffold(
        appBar: AppBar(
          title: Text('Quiz App'),
        ),
        body: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              Text(
                'Quiz completed! Your score: $score/${questions.length}',
                style: TextStyle(fontSize: 20),
              ),
            ],
          ),
        ),
      );
    }
  }
}
